version: '3'
services:
  reverse:
    container_name: reverse
    hostname: reverse.local
    image: nginx
    ports:
      - 85:85
      - 443:443
    volumes:
#      - <path/to/your/config>:/etc/nginx
      - ./app:/etc/nginx/conf.d/sites-available/plex.conf
      - ./app:/etc/ssl/private
      #Nginx Service
  webserver:
    build:
      context: .
      dockerfile: webserver.dockerfile
    container_name: webserver
    tty: true
    ports:
      - "8068:8068"
    volumes:
      - ./app:/var/www/server
    depends_on:
      - laravel-app1
    networks:
      - network

  #PHP Service
  laravel-app1:
    build:
      context: .
      dockerfile: app.dockerfile
    container_name: laravel-app1
    tty: true
    environment:
      SERVICE_NAME: laravel-app1
      SERVICE_TAGS: dev
    working_dir: /var/www/server
    volumes:
      - ./app:/var/www/server
      - ./docker/php/local.ini:/usr/local/etc/php/conf.d/local.ini
    networks:
      - network
    depends_on:
      - laravel-mysql
    command: /bin/bash -c "./local.sh | php-fpm | /usr/bin/supervisord -n -c /etc/supervisor/supervisord.conf"

  #redis service
  redis:
    image: redis:4.0
    ports:
      - "6382:6379"


  #mysql service
  laravel-mysql:
    image: mysql:8.0
    container_name: laravel-mysql
    restart: always
    tty: true
    ports:
      - "3308:3308"
    environment:
      MYSQL_DATABASE: database
      MYSQL_ROOT_PASSWORD: secret
      MYSQL_PASSWORD: secret
    volumes:
      - db_data:/var/lib/mysql
      - ./docker/mysql/init:/docker-entrypoint-initdb.d
    networks:
      - network

  #mariadb service
  #laravel-mariadb:
  #  image: 'mariadb:latest'
   # restart: always
   # environment:
   #   MYSQL_DATABASE: database
    #  MYSQL_ROOT_PASSWORD: secret
     # MYSQL_USER: root
     # MYSQL_PASSWORD: secret
   # volumes:
   #   - db_data:/var/lib/mysql
   # ports:
    #  - "3308:3308"

   # networks:
    #  - network

  #mongodb service
#  laravel-mongo:
#    container_name: laravel-mongo
#    image: mongo:5.0.9
#    volumes:
#      - mongo-laravel-vol:/data/db
#    ports:
#      - "27018:27017"
#    networks:
#      - network

#Docker Networks
networks:
  network:
    driver: bridge

#Docker Volumes
volumes:
  mongo-laravel-vol:
    driver: local
  db_data:
    driver: local
